name: Build iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.0'
  XCODE_VERSION: '15.0'

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Setup CocoaPods
      run: |
        sudo gem install cocoapods
        cd ios
        pod install
    
    # Code Signing Setup for Production Build
    - name: Setup Code Signing
      if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
        # Import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
        
        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
        # Apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    
    - name: Update Bundle Identifier
      run: |
        # Update bundle identifier for production
        sed -i '' 's/com.example.kitapUygulamasi/com.gizlikitap.app/g' ios/Runner.xcodeproj/project.pbxproj
        
        # Update Info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier com.gizlikitap.app" ios/Runner/Info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName Gizli Kitap" ios/Runner/Info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleName Gizli Kitap" ios/Runner/Info.plist
    
    - name: Build iOS (unsigned for testing)
      if: github.event_name != 'workflow_dispatch' || github.ref != 'refs/heads/main'
      run: |
        flutter build ios --release --no-codesign
    
    - name: Build iOS (signed for App Store)
      if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}
      run: |
        flutter build ios --release --export-options-plist=ios/ExportOptions.plist
    
    - name: Create IPA (unsigned for testing)
      if: github.event_name != 'workflow_dispatch' || github.ref != 'refs/heads/main'
      run: |
        mkdir -p build/ios/ipa
        cp -r build/ios/iphoneos/Runner.app build/ios/ipa/
        cd build/ios/ipa
        zip -r ../../../gizli-kitap-unsigned.ipa .
    
    - name: Create Signed IPA for App Store
      if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
      run: |
        # Archive the app
        xcodebuild -workspace ios/Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath build/ios/Runner.xcarchive \
          archive
        
        # Export IPA for App Store
        xcodebuild -exportArchive \
          -archivePath build/ios/Runner.xcarchive \
          -exportPath build/ios/ipa \
          -exportOptionsPlist ios/ExportOptions.plist
        
        # Rename IPA
        mv build/ios/ipa/Runner.ipa build/ios/ipa/gizli-kitap-appstore.ipa
    
    - name: Upload to App Store Connect
      if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
      env:
        APP_STORE_CONNECT_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      run: |
        # Create API key file
        mkdir -p ~/.appstoreconnect/private_keys
        echo -n "$APP_STORE_CONNECT_API_KEY_BASE64" | base64 --decode > ~/.appstoreconnect/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY_ID.p8
        
        # Upload to App Store Connect using altool
        xcrun altool --upload-app \
          --type ios \
          --file build/ios/ipa/gizli-kitap-appstore.ipa \
          --apiKey $APP_STORE_CONNECT_API_KEY_ID \
          --apiIssuer $APP_STORE_CONNECT_ISSUER_ID
    
    - name: Upload Unsigned IPA (for testing)
      if: github.event_name != 'workflow_dispatch' || github.ref != 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: gizli-kitap-ios-unsigned
        path: gizli-kitap-unsigned.ipa
        retention-days: 30
    
    - name: Upload Signed IPA (for App Store)
      if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: gizli-kitap-ios-appstore
        path: build/ios/ipa/gizli-kitap-appstore.ipa
        retention-days: 90
    
    - name: Build iOS Simulator
      run: |
        flutter build ios --simulator --debug
    
    - name: Create Simulator App
      run: |
        cd build/ios/iphonesimulator
        zip -r ../../../gizli-kitap-simulator.zip Runner.app
    
    - name: Upload Simulator App
      uses: actions/upload-artifact@v4
      with:
        name: gizli-kitap-ios-simulator
        path: gizli-kitap-simulator.zip
        retention-days: 30