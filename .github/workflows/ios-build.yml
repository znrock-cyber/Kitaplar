name: Build iOS App

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-14
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Build iOS App (Unsigned)
      run: |
        flutter build ios --release --no-codesign --no-tree-shake-icons
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive CODE_SIGNING_ALLOWED=NO
    
    - name: Create Unsigned IPA
      run: |
        cd ios
        mkdir -p build/unsigned
        cp -r build/Runner.xcarchive/Products/Applications/Runner.app build/unsigned/
        cd build/unsigned
        mkdir Payload
        mv Runner.app Payload/
        zip -r ../Kitaplar.ipa Payload/
        ls -la ../
        echo "📱 IPA dosyası oluşturuldu: Kitaplar.ipa"
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Kitaplar iOS v${{ github.run_number }}
        body: |
          📱 **Kitaplar iOS Uygulaması**
          
          🔧 **Kurulum:**
          1. IPA dosyasını indirin
          2. AltStore veya Sideloadly kullanarak yükleyin
          
          📋 **Özellikler:**
          - WebView tabanlı kitap okuma
          - Tam ekran tarayıcı deneyimi
          - iOS optimizasyonları
          
          ⚠️ **Not:** Bu imzasız bir IPA dosyasıdır. Sideloading gerektirir.
        draft: false
        prerelease: false
    
    - name: Upload IPA to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ios/build/Kitaplar.ipa
        asset_name: Kitaplar-iOS-v${{ github.run_number }}.ipa
        asset_content_type: application/octet-stream
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts-v${{ github.run_number }}
        path: |
          ios/build/Kitaplar.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "✅ Kitaplar iOS uygulaması başarıyla oluşturuldu!"
        echo "📱 İmzasız IPA dosyası hazır"
        echo "🔗 GitHub Releases sekmesinden indirebilirsiniz"
        echo "📦 Artifacts'ten de erişilebilir"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "❌ iOS build başarısız oldu!"
        echo "📋 Yukarıdaki logları kontrol edin"
        echo "🔧 Olası sorunlar: bağımlılıklar, build konfigürasyonu veya Xcode kurulumu"
        - name: Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            flutter-version: '3.16.0'
            channel: 'stable'
            cache: true
        
        - name: Install Flutter dependencies
          run: flutter pub get
        
        - name: Run Flutter tests
          run: flutter test
        
        - name: Setup Xcode
          uses: maxim-lobanov/setup-xcode@v1
          with:
            xcode-version: latest-stable
        
        - name: Install CocoaPods
          run: |
            cd ios
            pod install
            cd ..
        
        - name: Import Code-Signing Certificates
          uses: Apple-Actions/import-codesign-certs@v3
          with:
            p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
            p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
        
        - name: Download Provisioning Profiles
          uses: Apple-Actions/download-provisioning-profiles@v1
          with:
            bundle-id: 'com.gizlikitap.app'
            issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
            api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
            api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
        - name: Build iOS App
          run: |
            flutter build ios --release --no-codesign
            cd ios
            xcodebuild -workspace Runner.xcworkspace \
                       -scheme Runner \
                       -configuration Release \
                       -destination generic/platform=iOS \
                       -archivePath build/Runner.xcarchive \
                       archive
        
        - name: Export IPA
          run: |
            cd ios
            xcodebuild -exportArchive \
                       -archivePath build/Runner.xcarchive \
                       -exportOptionsPlist ExportOptions.plist \
                       -exportPath build/
        
        - name: Upload to TestFlight
          if: success()
          run: |
            xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
              --username "${{ secrets.APPLE_ID }}" \
              --password "${{ secrets.APPLE_APP_PASSWORD }}" \
              --verbose
          uses: Apple-Actions/upload-testflight-build@v1
          with:
            app-path: 'ios/build/Runner.ipa'
            issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
            api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
            api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
        - name: Upload build artifacts
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: ios-build-artifacts
            path: |
              ios/build/Runner.ipa
              ios/build/Runner.xcarchive
            retention-days: 30
        
        - name: Notify build completion
          if: success()
          run: |
            echo "✅ iOS build completed successfully!"
            echo "📱 App uploaded to TestFlight"
            echo "🔗 Check App Store Connect for processing status"
        
        - name: Notify build failure
          if: failure()
          run: |
            echo "❌ iOS build failed!"
            echo "📋 Check the logs above for error details"
            echo "🔧 Common issues: certificates, provisioning profiles, or code signing"