name: iOS Build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
          
      - name: Get Flutter dependencies
        run: flutter pub get
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
        
      - name: Setup CocoaPods
        run: |
          sudo gem install cocoapods
          pod --version
          
      - name: Clean iOS build
        run: |
          cd ios
          rm -rf Pods
          rm -rf Podfile.lock
          rm -rf .symlinks
          cd ..
          flutter clean
          flutter pub get
          
      - name: Install Pod dependencies
        run: |
          cd ios
          pod repo update
          pod install --repo-update --verbose
          cd ..
          
      # Code signing adƒ±mlarƒ±
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
          
      - name: Download Provisioning Profiles
        run: |
          echo "${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}" | base64 --decode > ios/KitapOnerileriDevelopment.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios/KitapOnerileriDevelopment.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          
      # iOS build ve IPA olu≈üturma
      - name: Build iOS
        run: flutter build ios --release
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
        
      - name: Create IPA
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/Runner.xcarchive \
                     archive
          xcodebuild -exportArchive \
                     -archivePath build/Runner.xcarchive \
                     -exportOptionsPlist ExportOptions.plist \
                     -exportPath build/
          cd ..
          
      # Artifact y√ºkleme
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/build/Runner.ipa
          retention-days: 7
      
      # Bildirimler
      - name: Notify build completion
        if: success()
        run: |
          echo "‚úÖ iOS build completed successfully!"
          echo "üì± IPA file ready for Sideloadly installation"
          echo "üìÅ Download the artifact to install with Sideloadly"
      
      - name: Notify build failure
        if: failure()
        run: |
          echo "‚ùå iOS build failed!"
          echo "üìã Check the logs above for error details"