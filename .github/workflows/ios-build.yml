name: iOS Build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
          cache: true
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Install CocoaPods
        run: |
          gem install cocoapods
          pod --version
          
      - name: Install Pod dependencies
        run: |
          cd ios
          pod install
          cd ..
          
      - name: Build iOS (no codesign)
        run: flutter build ios --release --no-codesign
        
      - name: Create IPA
        run: |
          cd ios
          mkdir -p build/Runner
          cp -r build/ios/iphoneos/Runner.app build/Runner/
          cd build
          zip -r Runner.ipa Runner
          cd ../..
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/build/Runner.ipa
          retention-days: 7
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS App
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/Runner.xcarchive \
                   archive
    
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath build/Runner.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath build/
    
    - name: Upload to TestFlight
      if: success()
      run: |
        xcrun altool --upload-app --type ios --file "build/ios/ipa/kitaplar.ipa" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: 'ios/build/Runner.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Runner.ipa
          ios/build/Runner.xcarchive
        retention-days: 30
    
    - name: Notify build completion
      if: success()
      run: |
        echo "‚úÖ iOS build completed successfully!"
        echo "üì± App uploaded to TestFlight"
        echo "üîó Check App Store Connect for processing status"
    
    - name: Notify build failure
      if: failure()
      run: |
        echo "‚ùå iOS build failed!"
        echo "üìã Check the logs above for error details"
        echo "üîß Common issues: certificates, provisioning profiles, or code signing"
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        cache: true
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run Flutter tests
      run: flutter test
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    
    - name: Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.gizlikitap.app'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: Build iOS